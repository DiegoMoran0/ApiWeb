@page "/clasificacion/nueva"
@page "/clasificacion/editar/{Id:int}"
@inject HttpClient _http;
@inject NavigationManager _navegador;

<h3>@letrero Equipo</h3>

<EditForm Model="laclasificacion" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="mb-3 row">
        <label for="txtNombre" class="col-sm-2 col-form-label">Nombre</label>
        <div class="col-sm-10">
            <InputText id="txtNombre" class="form-control" @bind-Value="laclasificacion.Nombre" />
            <ValidationMessage For="()=>laclasificacion.Nombre" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtFundacion" class="col-sm-2 col-form-label">Fundacion</label>
        <div class="col-sm-10">
            <InputText id="txtFundacion" class="form-control" @bind-Value="laclasificacion.Fundacion" />
            <ValidationMessage For="()=>laclasificacion.Fundacion" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtSede" class="col-sm-2 col-form-label">Sede</label>
        <div class="col-sm-10">
            <InputText id="txtSede" class="form-control" @bind-Value="laclasificacion.Sede" />
            <ValidationMessage For="()=>laclasificacion.Sede" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtPremios" class="col-sm-2 col-form-label">Premios</label>
        <div class="col-sm-10">
            <InputText id="txtPremios" class="form-control" @bind-Value="laclasificacion.Premios" />
            <ValidationMessage For="()=>laclasificacion.Premios" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtSocios" class="col-sm-2 col-form-label">Socios</label>
        <div class="col-sm-10">
            <InputText id="txtSocios" class="form-control" @bind-Value="laclasificacion.Socios" />
            <ValidationMessage For="()=>laclasificacion.Socios" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtPiloto" class="col-sm-2 col-form-label">Piloto</label>
        <div class="col-sm-10">
            <InputSelect class="form-control" @bind-Value="laclasificacion.PilotoId">
                @foreach (Piloto piloto in lospilotos)
                {
                    <option value="@piloto.Id">@piloto.Nombre</option>
                }
            </InputSelect>
            <ValidationMessage For="()=>laclasificacion.Id" />
        </div>
    </div>
    <button class="btn btn-success" type="submit">Guardar</button>
    <button class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private Clasificacion laclasificacion = new();
    private string letrero = "Nueva";
    private List<Piloto> lospilotos = new();

    protected override async Task OnParametersSetAsync()
    {
        lospilotos = await _http.GetFromJsonAsync<List<Piloto>>("api/pilotos");
        if (Id == 0)
        {
            letrero = "Nueva";
            laclasificacion = new();

            if (lospilotos != null && lospilotos.Count > 0)
            {
                laclasificacion.PilotoId = lospilotos[0].Id;
            }
        }
        else
        {
            letrero = "Modificar";
            laclasificacion = await _http.GetFromJsonAsync<Clasificacion>($"api/clasificaciones/{Id}");
        }
    }

    private async void Guardar()
    {
        if (Id == 0)
        {
            await _http.PostAsJsonAsync<Clasificacion>("api/clasificaciones", laclasificacion);
        }
        else
        {
            await _http.PutAsJsonAsync<Clasificacion>($"api/clasificaciones/{Id}", laclasificacion);
        }
        _navegador.NavigateTo("/clasificaciones");
    }

    private void Cancelar()
    {
        _navegador.NavigateTo("/clasificaciones");
    }
}
